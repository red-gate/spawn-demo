name: Integration tests

on: workflow_dispatch

jobs:
  build_dotnet_api_docker:
    name: Build API Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build API Server
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile
          load: true
          push: false
          tags: redgatefoundry/spawn-demo-api
      - name: Export built docker image
        run: |
          docker save redgatefoundry/spawn-demo-api | gzip > spawn-demo-api.tar.gz
      - name: Archive the built docker image
        uses: actions/upload-artifact@v2
        with:
          name: api-docker-image
          path: spawn-demo-api.tar.gz

  build_spawn_test_images:
    name: Build test Spawn Data Images
    runs-on: ubuntu-latest
    outputs:
      accountDataImageName: ${{ steps.account.outputs.dataImageName }}
      todoDataImageName: ${{ steps.todo.outputs.dataImageName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: account
        name: Build Spawn test 'account' data image
        uses: red-gate/spawn-ci-plugins/github/data-image/create@image-github-actions
        with:
          dataImageYaml: database/account/spawn/test.yaml
          tags: --tag=${{ github.run_number }}
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}
      - id: todo
        name: Build Spawn test 'todo' data image
        uses: red-gate/spawn-ci-plugins/github/data-image/create@image-github-actions
        with:
          dataImageYaml: database/todo/spawn/test.yaml
          tags: --tag=${{ github.run_number }}
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}

  run_demo_app_accounts_test:
    name: Run accounts tests
    runs-on: ubuntu-latest
    needs: [build_dotnet_api_docker, build_spawn_test_images]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download the docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: api-docker-image
      - name: Import the docker image
        run: |
          gunzip -c spawn-demo-api.tar.gz | docker load
      - run: |
          echo "Downloading and installing spawnctl..."
          curl -sL https://run.spawn.cc/install | sh
        name: 'Install spawnctl'
      - run: |
          set -e
          export PATH=$PATH:$HOME/.spawnctl/bin
          ./check_prerequisites.sh
          ./test/run_test.sh demo-app-accounts
        name: 'Run demo-app-accounts test suite using spawn databases'
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}
          ACCOUNT_TEST_SPAWN_DATA_IMAGE_NAME: spawn-demo-account-test
          TODO_TEST_SPAWN_DATA_IMAGE_NAME: spawn-demo-todo-test
          TAG: ${{ github.run_number }}
          ACCOUNT_SPAWN_DATA_CONTAINER_NAME: account-demo-app-accounts-${{ github.run_number }}
          TODO_SPAWN_DATA_CONTAINER_NAME: todo-demo-app-accounts-${{ github.run_number }}

  run_demo_app_projects_test:
    name: Run projects tests
    runs-on: ubuntu-latest
    needs: [build_dotnet_api_docker, build_spawn_test_images]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download the docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: api-docker-image
      - name: Import the docker image
        run: |
          gunzip -c spawn-demo-api.tar.gz | docker load
      - run: |
          echo "Downloading and installing spawnctl..."
          curl -sL https://run.spawn.cc/install | sh
        name: 'Install spawnctl'
      - run: |
          set -e
          export PATH=$PATH:$HOME/.spawnctl/bin
          ./check_prerequisites.sh
          ./test/run_test.sh demo-app-projects
        name: 'Run demo-app-projects test suite using spawn databases'
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}
          ACCOUNT_TEST_SPAWN_DATA_IMAGE_NAME: spawn-demo-account-test
          TODO_TEST_SPAWN_DATA_IMAGE_NAME: spawn-demo-todo-test
          TAG: ${{ github.run_number }}
          ACCOUNT_SPAWN_DATA_CONTAINER_NAME: account-demo-app-projects-${{ github.run_number }}
          TODO_SPAWN_DATA_CONTAINER_NAME: todo-demo-app-projects-${{ github.run_number }}
          
  run_demo_app_todos_test:
    name: Run todos tests
    runs-on: ubuntu-latest
    needs: [build_dotnet_api_docker, build_spawn_test_images]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download the docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: api-docker-image
      - name: Import the docker image
        run: |
          gunzip -c spawn-demo-api.tar.gz | docker load
      - run: |
          echo "Downloading and installing spawnctl..."
          curl -sL https://run.spawn.cc/install | sh
        name: 'Install spawnctl'
      - run: |
          set -e
          export PATH=$PATH:$HOME/.spawnctl/bin
          ./check_prerequisites.sh
          ./test/run_test.sh demo-app-todos
        name: 'Run demo-app-todos test suite using spawn databases'
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}
          ACCOUNT_TEST_SPAWN_DATA_IMAGE_NAME: spawn-demo-account-test
          TODO_TEST_SPAWN_DATA_IMAGE_NAME: spawn-demo-todo-test
          TAG: ${{ github.run_number }}
          ACCOUNT_SPAWN_DATA_CONTAINER_NAME: account-demo-app-todos-${{ github.run_number }}
          TODO_SPAWN_DATA_CONTAINER_NAME: todo-demo-app-todos-${{ github.run_number }}

  cleanup_images:
    name: Cleanup Spawn data images
    if: always()
    needs: [build_spawn_test_images,run_demo_app_todos_test,run_demo_app_projects_test,run_demo_app_accounts_test]
    runs-on: ubuntu-latest
    steps:
      - name: Delete Spawn test 'account' data image
        uses: red-gate/spawn-ci-plugins/github/data-image/delete@image-github-actions
        with:
          dataImage: ${{ needs.build_spawn_test_images.outputs.accountDataImageName }}:${{ github.run_number }}
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}
      - name: Delete Spawn test 'todo' data image
        uses: red-gate/spawn-ci-plugins/github/data-image/delete@image-github-actions
        with:
          dataImage: ${{ needs.build_spawn_test_images.outputs.todoDataImageName }}:${{ github.run_number }}
        env:
          SPAWNCTL_ACCESS_TOKEN: ${{ secrets.SPAWNCTL_ACCESS_TOKEN }}
